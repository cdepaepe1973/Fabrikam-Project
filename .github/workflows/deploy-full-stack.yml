# Coordinated Deployment - Deploy Both Services
# Deploys both FabrikamApi and FabrikamMcp with proper integration

name: Deploy Full Stack

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'development'
        type: choice
        options:
        - development
        - staging
        - production
      deploy_api:
        description: 'Deploy FabrikamApi'
        required: true
        default: true
        type: boolean
      deploy_mcp:
        description: 'Deploy FabrikamMcp'
        required: true
        default: true
        type: boolean

env:
  DOTNET_VERSION: '9.0.x'
  ENVIRONMENT: ${{ github.event.inputs.environment || 'dev' }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      api-changed: ${{ steps.changes.outputs.api }}
      mcp-changed: ${{ steps.changes.outputs.mcp }}
      should-deploy-api: ${{ steps.decide.outputs.deploy-api }}
      should-deploy-mcp: ${{ steps.decide.outputs.deploy-mcp }}
    
    steps:
    - name: 🛒 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: 🔍 Detect changes
      id: changes
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "api=true" >> $GITHUB_OUTPUT
          echo "mcp=true" >> $GITHUB_OUTPUT
        else
          if git diff --name-only HEAD~1 HEAD | grep -q "^FabrikamApi/"; then
            echo "api=true" >> $GITHUB_OUTPUT
          else
            echo "api=false" >> $GITHUB_OUTPUT
          fi
          
          if git diff --name-only HEAD~1 HEAD | grep -q "^FabrikamMcp/"; then
            echo "mcp=true" >> $GITHUB_OUTPUT
          else
            echo "mcp=false" >> $GITHUB_OUTPUT
          fi
        fi

    - name: 🎯 Decide deployments
      id: decide
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "deploy-api=${{ github.event.inputs.deploy_api }}" >> $GITHUB_OUTPUT
          echo "deploy-mcp=${{ github.event.inputs.deploy_mcp }}" >> $GITHUB_OUTPUT
        else
          echo "deploy-api=${{ steps.changes.outputs.api }}" >> $GITHUB_OUTPUT
          echo "deploy-mcp=${{ steps.changes.outputs.mcp }}" >> $GITHUB_OUTPUT
        fi

  build-api:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.should-deploy-api == 'true'
    
    steps:
    - name: 🛒 Checkout code
      uses: actions/checkout@v4

    - name: ⚙️ Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 🔨 Build and publish FabrikamApi
      run: |
        cd FabrikamApi/src
        dotnet restore
        dotnet build --configuration Release
        dotnet test --no-build
        dotnet publish --configuration Release --no-build --output ../../publish-api

    - name: 📤 Upload API artifact
      uses: actions/upload-artifact@v4
      with:
        name: fabrikam-api-${{ env.ENVIRONMENT }}
        path: ./publish-api

  build-mcp:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.should-deploy-mcp == 'true'
    
    steps:
    - name: 🛒 Checkout code
      uses: actions/checkout@v4

    - name: ⚙️ Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 🔨 Build and publish FabrikamMcp
      run: |
        cd FabrikamMcp/src
        dotnet restore
        dotnet build --configuration Release
        dotnet test --no-build
        dotnet publish --configuration Release --no-build --output ../../publish-mcp

    - name: 📤 Upload MCP artifact
      uses: actions/upload-artifact@v4
      with:
        name: fabrikam-mcp-${{ env.ENVIRONMENT }}
        path: ./publish-mcp

  deploy-api:
    runs-on: ubuntu-latest
    needs: [detect-changes, build-api]
    if: needs.detect-changes.outputs.should-deploy-api == 'true'
    environment: 
      name: ${{ github.event.inputs.environment || 'development' }}
    
    steps:
    - name: 📥 Download API artifact
      uses: actions/download-artifact@v4
      with:
        name: fabrikam-api-${{ env.ENVIRONMENT }}

    - name: 🔐 Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 🚀 Deploy FabrikamApi
      id: deploy-api
      uses: azure/webapps-deploy@v3
      with:
        app-name: fabrikam-api-${{ env.ENVIRONMENT }}
        package: .

    - name: 📋 Store API URL
      run: |
        API_URL="${{ steps.deploy-api.outputs.webapp-url }}"
        echo "API_URL=$API_URL" >> $GITHUB_ENV
        echo "🌐 FabrikamApi deployed: $API_URL"

  deploy-mcp:
    runs-on: ubuntu-latest
    needs: [detect-changes, build-mcp, deploy-api]
    if: always() && needs.detect-changes.outputs.should-deploy-mcp == 'true'
    environment: 
      name: ${{ github.event.inputs.environment || 'development' }}
    
    steps:
    - name: 📥 Download MCP artifact
      uses: actions/download-artifact@v4
      with:
        name: fabrikam-mcp-${{ env.ENVIRONMENT }}

    - name: 🔐 Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 🔗 Configure API integration
      run: |
        API_URL="https://fabrikam-api-${{ env.ENVIRONMENT }}.azurewebsites.net"
        echo "Configuring MCP to connect to: $API_URL"
        
        az webapp config appsettings set \
          --name "fabrikam-mcp-${{ env.ENVIRONMENT }}" \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP_NAME }} \
          --settings "FabrikamApi__BaseUrl=$API_URL"

    - name: 🚀 Deploy FabrikamMcp
      id: deploy-mcp
      uses: azure/webapps-deploy@v3
      with:
        app-name: fabrikam-mcp-${{ env.ENVIRONMENT }}
        package: .

    - name: 📋 Store MCP URL
      run: |
        MCP_URL="${{ steps.deploy-mcp.outputs.webapp-url }}"
        echo "MCP_URL=$MCP_URL" >> $GITHUB_ENV
        echo "🌐 FabrikamMcp deployed: $MCP_URL"

  integration-test:
    runs-on: ubuntu-latest
    needs: [detect-changes, deploy-api, deploy-mcp]
    if: always() && (needs.deploy-api.result == 'success' || needs.deploy-mcp.result == 'success')
    
    steps:
    - name: 🏥 Wait for services to start
      run: sleep 45

    - name: 🔐 Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 🧪 Integration test
      run: |
        API_URL="https://fabrikam-api-${{ env.ENVIRONMENT }}.azurewebsites.net"
        MCP_URL="https://fabrikam-mcp-${{ env.ENVIRONMENT }}.azurewebsites.net"
        
        echo "🔍 Testing API health..."
        API_RESPONSE=$(curl -s -w "%{http_code}" "$API_URL/health" -o /tmp/api_response.json)
        if [ "$API_RESPONSE" = "200" ]; then
          echo "✅ API is healthy"
          API_STATUS=$(cat /tmp/api_response.json | jq -r '.status // "Unknown"')
          echo "   Status: $API_STATUS"
        else
          echo "❌ API health check failed (HTTP $API_RESPONSE)"
        fi
        
        echo "🔍 Testing MCP server..."
        MCP_RESPONSE=$(curl -s -w "%{http_code}" "$MCP_URL/status" -o /tmp/mcp_response.json)
        if [ "$MCP_RESPONSE" = "200" ]; then
          echo "✅ MCP server is healthy"
          MCP_STATUS=$(cat /tmp/mcp_response.json | jq -r '.Status // "Unknown"')
          echo "   Status: $MCP_STATUS"
        else
          echo "❌ MCP server health check failed (HTTP $MCP_RESPONSE)"
        fi
        
        echo ""
        echo "🎉 Deployment Summary:"
        echo "   🌐 FabrikamApi: $API_URL"
        echo "   🤖 FabrikamMcp: $MCP_URL"
        echo "   📖 API Docs: $API_URL/swagger"
        echo "   📊 MCP Status: $MCP_URL/status"
