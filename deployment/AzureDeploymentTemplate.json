{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "description": "Deploys Fabrikam AI Demo platform with API and MCP services",
    "author": "Fabrikam Team"
  },
  "parameters": {
    "baseName": {
      "type": "string",
      "defaultValue": "FabrikamAIDemo",
      "minLength": 3,
      "maxLength": 15,
      "metadata": {
        "description": "Base name for all resources. Will be combined with a unique suffix."
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "staging",
        "prod"
      ],
      "metadata": {
        "description": "Environment for the deployment (dev, staging, prod)"
      }
    },
    "githubRepository": {
      "type": "string",
      "defaultValue": "https://github.com/davebirr/Fabrikam-Project",
      "metadata": {
        "description": "URL to your GitHub repository fork"
      }
    },
    "githubToken": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "GitHub Personal Access Token for deployment automation (optional - can be configured later)"
      }
    },
    "customDomain": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Custom domain name (e.g., levelupcsp.com). Leave empty to use Azure default domains (.azurewebsites.net)"
      }
    },
    "enableCustomDomains": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable custom domain configuration. Requires DNS records to be created manually."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region for all resources"
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "B1",
      "allowedValues": [
        "F1",
        "B1",
        "B2",
        "S1",
        "S2",
        "P1v2",
        "P2v2"
      ],
      "metadata": {
        "description": "App Service Plan pricing tier"
      }
    }
  },
  "variables": {
    "suffix": "[substring(toLower(uniqueString(resourceGroup().id, resourceGroup().location)), 0, 4)]",
    "resourceBaseName": "[toLower(concat(parameters('baseName'), '-', variables('suffix')))]",
    "apiAppName": "[concat('fabrikam-api-', parameters('environment'), '-', variables('suffix'))]",
    "mcpAppName": "[concat('fabrikam-mcp-', parameters('environment'), '-', variables('suffix'))]",
    "apiPlanName": "[concat('plan-api-', parameters('environment'), '-', variables('suffix'))]",
    "mcpPlanName": "[concat('plan-mcp-', parameters('environment'), '-', variables('suffix'))]",
    "logWorkspaceName": "[concat('log-', parameters('environment'), '-', variables('suffix'))]",
    "apiInsightsName": "[concat('appi-api-', parameters('environment'), '-', variables('suffix'))]",
    "mcpInsightsName": "[concat('appi-mcp-', parameters('environment'), '-', variables('suffix'))]",
    "apiUrl": "[if(parameters('enableCustomDomains'), concat('https://fabrikam-api-', parameters('environment'), '-', variables('suffix'), '.', parameters('customDomain')), concat('https://', variables('apiAppName'), '.azurewebsites.net'))]",
    "mcpUrl": "[if(parameters('enableCustomDomains'), concat('https://fabrikam-mcp-', parameters('environment'), '-', variables('suffix'), '.', parameters('customDomain')), concat('https://', variables('mcpAppName'), '.azurewebsites.net'))]",
    "apiCustomDomain": "[concat('fabrikam-api-', parameters('environment'), '-', variables('suffix'), '.', parameters('customDomain'))]",
    "mcpCustomDomain": "[concat('fabrikam-mcp-', parameters('environment'), '-', variables('suffix'), '.', parameters('customDomain'))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2020-08-01",
      "name": "[variables('logWorkspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30,
        "features": {
          "searchVersion": 1,
          "legacy": 0,
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('apiInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logWorkspaceName'))]"
      ],
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logWorkspaceName'))]"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('mcpInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logWorkspaceName'))]"
      ],
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logWorkspaceName'))]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[variables('apiPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('skuName')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[variables('mcpPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('skuName')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('apiAppName')]",
      "location": "[parameters('location')]",
      "kind": "app,linux",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('apiPlanName'))]",
        "[resourceId('Microsoft.Insights/components', variables('apiInsightsName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('apiPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "linuxFxVersion": "DOTNETCORE|9.0",
          "alwaysOn": "[if(equals(parameters('skuName'), 'F1'), false(), true())]",
          "ftpsState": "Disabled",
          "minTlsVersion": "1.2",
          "appSettings": [
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('apiInsightsName'))).ConnectionString]"
            },
            {
              "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "ASPNETCORE_ENVIRONMENT",
              "value": "[parameters('environment')]"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('mcpAppName')]",
      "location": "[parameters('location')]",
      "kind": "app,linux",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('mcpPlanName'))]",
        "[resourceId('Microsoft.Insights/components', variables('mcpInsightsName'))]",
        "[resourceId('Microsoft.Web/sites', variables('apiAppName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('mcpPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "linuxFxVersion": "DOTNETCORE|9.0",
          "alwaysOn": "[if(equals(parameters('skuName'), 'F1'), false(), true())]",
          "ftpsState": "Disabled",
          "minTlsVersion": "1.2",
          "appSettings": [
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('mcpInsightsName'))).ConnectionString]"
            },
            {
              "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "ASPNETCORE_ENVIRONMENT",
              "value": "[parameters('environment')]"
            },
            {
              "name": "FabrikamApi__BaseUrl",
              "value": "[variables('apiUrl')]"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "instanceSuffix": {
      "type": "string",
      "value": "[variables('suffix')]"
    },
    "apiAppName": {
      "type": "string",
      "value": "[variables('apiAppName')]"
    },
    "mcpAppName": {
      "type": "string",
      "value": "[variables('mcpAppName')]"
    },
    "apiUrl": {
      "type": "string",
      "value": "[variables('apiUrl')]"
    },
    "mcpUrl": {
      "type": "string",
      "value": "[variables('mcpUrl')]"
    },
    "apiHealthCheck": {
      "type": "string",
      "value": "[concat(variables('apiUrl'), '/health')]"
    },
    "mcpHealthCheck": {
      "type": "string",
      "value": "[concat(variables('mcpUrl'), '/status')]"
    },
    "customDomainsEnabled": {
      "type": "bool",
      "value": "[parameters('enableCustomDomains')]"
    },
    "apiCustomDomain": {
      "type": "string",
      "value": "[if(parameters('enableCustomDomains'), variables('apiCustomDomain'), 'Not configured')]"
    },
    "mcpCustomDomain": {
      "type": "string",
      "value": "[if(parameters('enableCustomDomains'), variables('mcpCustomDomain'), 'Not configured')]"
    },
    "dnsRecordsNeeded": {
      "type": "string",
      "value": "[if(parameters('enableCustomDomains'), concat('Create CNAME records: ', variables('apiCustomDomain'), ' -> ', variables('apiAppName'), '.azurewebsites.net and ', variables('mcpCustomDomain'), ' -> ', variables('mcpAppName'), '.azurewebsites.net'), 'No custom domains configured')]"
    },
    "deploymentInstructions": {
      "type": "string",
      "value": "Resources created successfully! Next: Set up GitHub Actions CI/CD for automated deployments. See the deployment guide for detailed instructions."
    }
  }
}
